module.exports = {
  requires: "var makeComparisonAndWriteResult = require(\'../compare_and_write\');\n",

  singleCall: 'A3.size.call(A3, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F3, data, \'||\', \'stack size\', \'file\', \'F3\');\n  F3 = data;\n',

  assignment: '\nvar A3 = require(\'./stack\');\nvar F3 = {"size":0};\nvar A4 = require(\'./stack\');\nvar C4 = {el:1};\nvar F4 = {};\nvar A5 = require(\'./stack\');\nvar F5 = {"size":1};\nvar A6 = require(\'./stack\');\nvar F6 = {"el":100};\nvar A7 = require(\'./stack\');\nvar C7 = F6;\nvar F7 = {};\nvar A8 = require(\'./stack\');\nvar F8 = {"size":2};\nvar A9 = require(\'./stack\');\nvar F9 = {"el":1};\nvar A10 = require(\'./stack\');\nvar F10 = {"el":100};\nvar A11 = require(\'./stack\');\nvar F11 = {"el":100};\n\n',

  linearCalls: 'A3.size.call(A3, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F3, data, \'||\', \'stack size\', \'file\', \'F3\');\n  F3 = data;\n\n});\nA4.push.call(A4, {el:1}, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F4, data, \'|\', \'stack push\', \'file\', \'F4\');\n  F4 = data;\n\n});\nA5.size.call(A5, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F5, data, \'||\', \'stack size\', \'file\', \'F5\');\n  F5 = data;\n\n});\nA8.size.call(A8, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F8, data, \'||\', \'stack size\', \'file\', \'F8\');\n  F8 = data;\n\n});\nA9.top.call(A9, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F9, data, \'||\', \'stack top\', \'file\', \'F9\');\n  F9 = data;\n\n});\nA10.top.call(A10, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F10, data, \'||\', \'stack top\', \'file\', \'F10\');\n  F10 = data;\n\n});\nA11.pop.call(A11, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F11, data, \'||\', \'stack pop\', \'file\', \'F11\');\n  F11 = data;\n\n});\n',

  nestedCalls: 'A6.top.call(A6, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F6, data, \'|\', \'stack top\', \'file\', \'F6\');\n  F6 = data;\nA7.push.call(A7, F6, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F7, data, \'||\', \'stack push\', \'file\', \'F7\');\n  F7 = data;\n\n});\n\n});\n',

  callback_hell: 'A3.size.call(A3, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F3, data, \'||\', \'stack size\', \'file\', \'F3\');\n  F3 = data;\n  A4.push.call(A4, C4, function(err, data){\n    if(err)  return(err, null);\n    makeComparisonAndWriteResult(F4, data, \'|\', \'stack push\', \'file\', \'F4\');\n    F4 = data;\n    A5.size.call(A5, function(err, data){\n      if(err)  return(err, null);\n      makeComparisonAndWriteResult(F5, data, \'||\', \'stack size\', \'file\', \'F5\');\n      F5 = data;\n      A6.top.call(A6, function(err, data){\n        if(err)  return(err, null);\n        makeComparisonAndWriteResult(F6, data, \'|\', \'stack top\', \'file\', \'F6\');\n        F6 = data;\n        A7.push.call(A7, C7, function(err, data){\n          if(err)  return(err, null);\n          makeComparisonAndWriteResult(F7, data, \'||\', \'stack push\', \'file\', \'F7\');\n          F7 = data;\n          A8.size.call(A8, function(err, data){\n            if(err)  return(err, null);\n            makeComparisonAndWriteResult(F8, data, \'||\', \'stack size\', \'file\', \'F8\');\n            F8 = data;\n            A9.top.call(A9, function(err, data){\n              if(err)  return(err, null);\n              makeComparisonAndWriteResult(F9, data, \'||\', \'stack top\', \'file\', \'F9\');\n              F9 = data;\n              A10.top.call(A10, function(err, data){\n                if(err)  return(err, null);\n                makeComparisonAndWriteResult(F10, data, \'||\', \'stack top\', \'file\', \'F10\');\n                F10 = data;\n                A11.pop.call(A11, function(err, data){\n                  if(err)  return(err, null);\n                  makeComparisonAndWriteResult(F11, data, \'||\', \'stack pop\', \'file\', \'F11\');\n                  F11 = data;\n                  A12.size.call(A12, function(err, data){\n                    if(err)  return(err, null);\n                    makeComparisonAndWriteResult(F12, data, \'||\', \'stack size\', \'file\', \'F12\');\n                    F12 = data;\n\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});\n',

  content: '/*\n Demonstaration \n */\nvar makeComparisonAndWriteResult = require(\'../compare_and_write\');\n\nvar A3 = require(\'./stack\');\nvar F3 = {"size":0};\nvar A4 = require(\'./stack\');\nvar C4 = {el:1};\nvar F4 = {};\nvar A5 = require(\'./stack\');\nvar F5 = {"size":1};\nvar A8 = require(\'./stack\');\nvar F8 = {"size":2};\nvar A9 = require(\'./stack\');\nvar F9 = {"el":1};\nvar A10 = require(\'./stack\');\nvar F10 = {"el":100};\nvar A11 = require(\'./stack\');\nvar F11 = {"el":100};\nvar A12 = require(\'./stack\');\nvar F12 = {"size":1};\nvar A6 = require(\'./stack\');\nvar F6 = {"el":100};\nvar A7 = require(\'./stack\');\nvar C7 = F6;\nvar F7 = {};\n\n\nA3.size.call(A3, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F3, data, \'||\', \'stack size\', \'file\', \'F3\');\n  F3 = data;\n\n});\nA4.push.call(A4, {el:1}, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F4, data, \'|\', \'stack push\', \'file\', \'F4\');\n  F4 = data;\n\n});\nA5.size.call(A5, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F5, data, \'||\', \'stack size\', \'file\', \'F5\');\n  F5 = data;\n\n});\nA8.size.call(A8, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F8, data, \'||\', \'stack size\', \'file\', \'F8\');\n  F8 = data;\n\n});\nA9.top.call(A9, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F9, data, \'||\', \'stack top\', \'file\', \'F9\');\n  F9 = data;\n\n});\nA10.top.call(A10, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F10, data, \'||\', \'stack top\', \'file\', \'F10\');\n  F10 = data;\n\n});\nA11.pop.call(A11, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F11, data, \'||\', \'stack pop\', \'file\', \'F11\');\n  F11 = data;\n\n});\nA12.size.call(A12, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F12, data, \'||\', \'stack size\', \'file\', \'F12\');\n  F12 = data;\n\n});\nA6.top.call(A6, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F6, data, \'|\', \'stack top\', \'file\', \'F6\');\n  F6 = data;\nA7.push.call(A7, F6, function(err, data){\n  if(err)  return(err, null);\n  makeComparisonAndWriteResult(F7, data, \'||\', \'stack push\', \'file\', \'F7\');\n  F7 = data;\n\n});\n\n});\n',
};
